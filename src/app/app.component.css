/* src/app/app.component.css */

.app-container {
  display: flex; /* Makes sidebar and main content side-by-side */
  height: 100%; /* IMPORTANT: Makes app-container fill the full height of body */
  width: 100%; /* Makes app-container fill the full width */
  background-color: #131313; /* Consistent with global theme */
  color: #E0E0E0; /* Consistent with global theme */
}

.main-content-wrapper {
  flex-grow: 1; /* Takes all remaining horizontal space */
  display: flex; /* Uses flexbox to center content vertically/horizontally */
  justify-content: center; /* Centers horizontally */
  align-items: center; /* Centers vertically */
  height: 100%; /* IMPORTANT: Makes main content wrapper fill its parent's height */
  padding: 0; /* Let your component's container handle its own spacing */
  overflow: hidden; /* Ensures no scrolling in this wrapper */
  background-color: #131313; /* Consistent with global dark theme */
}

/* --- Media Queries for Mobile Layout --- */

:root {
    --top-nav-height: 4rem; /* Default height for the mobile top navigation */
    --top-nav-height-small: 3.5rem; /* Smaller height for very small mobile screens */
}

@media (max-width: 48rem) { /* Common breakpoint for tablets/larger phones (768px) */
    .app-container {
        flex-direction: column; /* On mobile, stack sidebar on top of main content */
    }

    .main-content-wrapper {
        /* Mobile: It now needs to take the remaining height of the viewport */
        height: calc(100vh - var(--top-nav-height-small));  /* Calculate height excluding top nav */
        overflow-y:auto; 
        
        /* Remove desktop centering as content in router-outlet will manage its own layout */
        justify-content: flex-start;
        align-items: flex-start;

        padding-top: var(--top-nav-height-small); /* Push content below the new fixed top bar */
        padding-bottom: 0; /* Let the component inside handle its own bottom padding */
    }
}
